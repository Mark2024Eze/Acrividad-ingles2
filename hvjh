<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap" rel="stylesheet">
  <style>
    body {
      max-width: 800px;
      margin: 20px auto;
      padding: 20px;
      font-family: 'Montserrat', sans-serif;
      background-color: #ffffff;
      color: #333;
    }

    h1, h2 {
      text-align: center;
      color: #0066cc;
    }

    .container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: relative;
      margin-top: 20px;
    }

    .column {
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    .adjective, .image-container {
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 5px;
      cursor: pointer;
      position: relative;
    }

    .image {
      width: 100px;
      height: 100px;
      object-fit: cover;
      border: 2px solid #ddd;
      border-radius: 5px;
    }

    .adjective {
      font-size: 14px;
      font-weight: bold;
      background-color: #e0f7fa;
      padding: 5px;
      border-radius: 5px;
      text-align: center;
      width: 100px;
      height: 100px;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
    }

    .selected {
      background-color: #b2ebf2;
      border: 2px solid #00796b;
    }

    .incorrect {
      background-color: #ffcdd2;
      border: 2px solid #d32f2f;
    }

    canvas {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
    }

    @media (max-width: 600px) {
      .adjective, .image-container {
        margin: 10px 0;
      }

      .adjective {
        width: 80px;
        height: 80px;
      }

      .image {
        width: 80px;
        height: 80px;
      }
    }

    .progress-container, .error-container {
      width: 100%;
      background-color: #e0e0e0;
      border-radius: 5px;
      margin: 10px 0;
    }

    .progress-bar, .error-bar {
      height: 20px;
      text-align: center;
      line-height: 20px;
      color: white;
      border-radius: 5px;
    }

    .progress-bar {
      background-color: #76c7c0;
    }

    .error-bar {
      background-color: #f44336;
    }
  </style>
  <title>Match the Adjectives</title>
</head>
<body>
  <h1>Match the Adjectives with the Images</h1>
  <h2>Click on the adjectives and then on the images to match them</h2>

  <div class="progress-container">
    <div id="progressBar" class="progress-bar">0%</div>
  </div>
  <div class="progress-container">
    <div id="correctBar" class="progress-bar">Correct: 0</div>
  </div>
  <div class="error-container">
    <div id="errorBar" class="error-bar">Errors: 0</div>
  </div>
  
  <div class="container">
    <div class="column" id="adjectives">
      <div class="adjective" data-adjective="happy">Happy</div>
      <div class="adjective" data-adjective="sad">Sad</div>
      <div class="adjective" data-adjective="angry">Angry</div>
      <div class="adjective" data-adjective="scared">Scared</div>
      <div class="adjective" data-adjective="excited">Excited</div>
      <div class="adjective" data-adjective="bored">Bored</div>
      <div class="adjective" data-adjective="confused">Confused</div>
      <div class="adjective" data-adjective="surprised">Surprised</div>
    </div>
    <canvas id="canvas"></canvas>
    <div class="column" id="images">
      <div class="image-container" data-adjective="happy">
        <img src="https://raw.githubusercontent.com/Mark2024Eze/Acrividad-ingles2/main/nino-sonriente-aislado-rosa.png" alt="Happy Person" class="image">
      </div>
      <div class="image-container" data-adjective="angry">
        <img src="https://raw.githubusercontent.com/Mark2024Eze/Acrividad-ingles2/main/retrato-nino-pequeno-lindo-molesto.png" alt="Angry Person" class="image">
      </div>
      <div class="image-container" data-adjective="bored">
        <img src="https://raw.githubusercontent.com/Mark2024Eze/Acrividad-ingles2/main/hermosa-nina-jengibre-sentado-piernas-cruzadas-sobre-pared-blanca.png" alt="Bored Person" class="image">
      </div>
      <div class="image-container" data-adjective="excited">
        <img src="https://raw.githubusercontent.com/Mark2024Eze/Acrividad-ingles2/main/expresiones-ninos.png" alt="Excited Person" class="image">
      </div>
      <div class="image-container" data-adjective="sad">
        <img src="https://raw.githubusercontent.com/Mark2024Eze/Acrividad-ingles2/main/retrato-persona-depresion.png" alt="Sad Person" class="image">
      </div>
      <div class="image-container" data-adjective="confused">
        <img src="https://raw.githubusercontent.com/Mark2024Eze/Acrividad-ingles2/main/chica-guapa-joven-haciendo-gesto-aislado-pared-blanca.png" alt="Confused Person" class="image">
      </div>
      <div class="image-container" data-adjective="scared">
        <img src="https://raw.githubusercontent.com/Mark2024Eze/Acrividad-ingles2/main/pequeno-lindo-nino-rubio-sorprendido-camiseta-roja-sosteniendo-cabeza-manos-mientras-mira-lado-pared-blanca.png" alt="Scared Person" class="image">
      </div>
      <div class="image-container" data-adjective="surprised">
        <img src="https://raw.githubusercontent.com/Mark2024Eze/Acrividad-ingles2/main/retrato-nino-sorprendido-manos-cabeza-mirando-camara-contra-fondo-gris.png" alt="Surprised Person" class="image">
      </div>
    </div>
  </div>

  <script>
    const adjectives = document.querySelectorAll('.adjective');
    const imageContainers = document.querySelectorAll('.image-container');
    const canvas = document.getElementById('canvas');
    const ctx = canvas.getContext('2d');
    let selectedAdjective = null;
    let correctAnswers = 0;
    let errors = 0;

    const correctMatches = {
      happy: 'nino-sonriente-aislado-rosa.png',
      sad: 'retrato-persona-depresion.png',
      angry: 'retrato-nino-pequeno-lindo-molesto.png',
      scared: 'pequeno-lindo-nino-rubio-sorprendido-camiseta-roja-sosteniendo-cabeza-manos-mientras-mira-lado-pared-blanca.png',
      excited: 'expresiones-ninos.png',
      bored: 'hermosa-nina-jengibre-sentado-piernas-cruzadas-sobre-pared-blanca.png',
      confused: 'chica-guapa-joven-haciendo-gesto-aislado-pared-blanca.png',
      surprised: 'retrato-nino-sorprendido-manos-cabeza-mirando-camara-contra-fondo-gris.png'
    };

    const matchedImages = new Set();

    canvas.width = document.querySelector('.container').offsetWidth;
    canvas.height = document.querySelector('.container').offsetHeight;

    function drawArrow(fromX, fromY, toX, toY) {
      const headlen = 10; // length of head in pixels
      const dx = toX - fromX;
      const dy = toY - fromY;
      const angle = Math.atan2(dy, dx);
      ctx.moveTo(fromX, fromY);
      ctx.lineTo(toX, toY);
      ctx.lineTo(toX - headlen * Math.cos(angle - Math.PI / 6), toY - headlen * Math.sin(angle - Math.PI / 6));
      ctx.moveTo(toX, toY);
      ctx.lineTo(toX - headlen * Math.cos(angle + Math.PI / 6), toY - headlen * Math.sin(angle + Math.PI / 6));
    }

    function clearCanvas() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
    }

    function updateProgressBar() {
      const progressBar = document.getElementById('progressBar');
      const totalAdjectives = adjectives.length;
      const progressPercentage = (correctAnswers / totalAdjectives) * 100;
      progressBar.style.width = progressPercentage + '%';
      progressBar.textContent = Math.round(progressPercentage) + '%';
    }

    function updateCorrectCounter() {
      const correctBar = document.getElementById('correctBar');
      correctBar.textContent = 'Correct: ' + correctAnswers;
    }

    function updateErrorCounter() {
      const errorBar = document.getElementById('errorBar');
      errorBar.textContent = 'Errors: ' + errors;
    }

    adjectives.forEach(adjective => {
      adjective.addEventListener('click', () => {
        if (selectedAdjective) {
          selectedAdjective.classList.remove('selected');
        }
        selectedAdjective = adjective;
        selectedAdjective.classList.add('selected');
      });
    });

    imageContainers.forEach(container => {
      container.addEventListener('click', () => {
        if (selectedAdjective) {
          const adjectiveText = selectedAdjective.getAttribute('data-adjective');
          const containerAdjective = container.getAttribute('data-adjective');
          const adjectiveImage = correctMatches[adjectiveText];
          const containerImage = container.querySelector('img').src.split('/').pop();

          if (adjectiveText === containerAdjective && adjectiveImage === containerImage) {
            if (!matchedImages.has(containerImage)) {
              const adjectiveRect = selectedAdjective.getBoundingClientRect();
              const containerRect = container.getBoundingClientRect();

              const startX = adjectiveRect.left + adjectiveRect.width / 2 - canvas.getBoundingClientRect().left;
              const startY = adjectiveRect.top + adjectiveRect.height / 2 - canvas.getBoundingClientRect().top;
              const endX = containerRect.left + containerRect.width / 2 - canvas.getBoundingClientRect().left;
              const endY = containerRect.top + containerRect.height / 2 - canvas.getBoundingClientRect().top;

              ctx.beginPath();
              drawArrow(startX, startY, endX, endY);
              ctx.strokeStyle = '#0066cc';
              ctx.lineWidth = 2;
              ctx.stroke();
              
              handleCorrectAnswer(containerImage);
            }
            selectedAdjective.classList.remove('selected');
            selectedAdjective = null;
          } else {
            container.classList.add('incorrect');
            errors++;
            updateErrorCounter();
            setTimeout(() => container.classList.remove('incorrect'), 1000);
            selectedAdjective.classList.remove('selected');
            selectedAdjective = null;
          }
        }
      });
    });

    function handleCorrectAnswer(image) {
      matchedImages.add(image);
      correctAnswers++;
      updateProgressBar();
      updateCorrectCounter();
    }
  </script>
</body>
</html>
